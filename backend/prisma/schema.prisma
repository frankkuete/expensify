generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Asset {
  id              String             @id @default(uuid()) @db.Uuid
  clerkId         String
  name            String             @db.VarChar(255)
  type            AssetType
  description     String?
  value           Decimal           @db.Decimal(18, 2)
  quantity        Decimal           @db.Decimal(18, 2)    @default(1)
  unitValue       Decimal           @default(0) @db.Decimal(18, 2)
  currency        String            @default("USD") @db.VarChar(10)
  categoryId      String?           @db.Uuid
  subcategoryId   String?           @db.Uuid
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  category        AssetCategory?    @relation(fields: [categoryId], references: [id])
  subcategory     AssetSubcategory? @relation(fields: [subcategoryId], references: [id])
  AssetDocuments  AssetDocument[]
}

model AssetDocument {
  id        String   @id @default(uuid()) @db.Uuid
  assetId   String   @db.Uuid
  name      String   @db.VarChar(255)
  url       String   @db.VarChar(500) // lien Supabase Storage
  createdAt DateTime @default(now())
  asset     Asset    @relation(fields: [assetId], references: [id], onDelete: Cascade)
}


enum AssetType {/
  real_estate
  stock
  bond
  etf
  cash
  custom
}

model AssetCategory {
  id            String             @id @default(uuid()) @db.Uuid
  name          String             @unique @db.VarChar(100)
  assets        Asset[]
  subcategories AssetSubcategory[]
}

model AssetSubcategory {
  id          String        @id @default(uuid()) @db.Uuid
  categoryId  String        @db.Uuid
  name        String        @db.VarChar(100)
  category    AssetCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  assets      Asset[]
}



model Transaction {
  id              String              @id @default(uuid()) @db.Uuid
  userId          String              @db.Uuid
  type            TransactionType
  categoryId      String              @db.Uuid
  amount          Decimal             @db.Decimal(18, 2)
  currency        String              @default("USD") @db.VarChar(10)
  description     String?
  transactionDate DateTime            @db.Date
  createdAt       DateTime            @default(now())
  category        TransactionCategory @relation(fields: [categoryId], references: [id])
}

enum TransactionType {
  income
  expense
}

model TransactionCategory {
  id           String        @id @default(uuid()) @db.Uuid
  name         String        @db.VarChar(100)
  transactions Transaction[]
}
